library(readr)
install.packages(readr)
install.packages('readr')
install.packages('readr')
library(readr)
plague_outbreaks <- read_csv('/Users/x11752/Desktop/LANL AIAD/Plague Research/R-Studio/plague.csv')
plague_outbreaks <- read_csv('/Users/l245854/Desktop/Fernando/Coding_and_getting_Statistical_Data/plague.csv')
cor(plague_outbreaks$cases, plague_outbreaks$hdi, method = c("pearson"))
plague_outbreaks <- read_csv('/Users/l245854/Desktop/Fernando/Coding_and_getting_Statistical_Data/plague.csv')
### Task 1 ###
# Ensure that the data you have brought in is formatted appropriately
# Are the column names what you expect? head() and tail()
# Are the number of rows what you expect? nrow()
View(plague_outbreaks)
head(plague_outbreaks)
nrow(plague_outbreaks)
sapply(plague_outbreaks, function(x) typeof(x))
# Look for unique values
# unique(plague_outbreaks$est.attack.rate)
sapply(plague_outbreaks, function(x) unique(x))
drops <- c('vax.status', 'natural.disaster', 'outbreak.pathogen', 'age.strata', 'vector.type', 'vector.density', 'attack.rate', 'vax.region', 'source.proximity', 'reported.contact', 'median.age', 'male.cases', 'gastro.source.specific', 'drug.use', 'history.of.ebola', 'transmission.type', 'rain.dry')
plague_specific <- plague_outbreaks[, !(names(plague_outbreaks) %in% drops)]
#Check for data types
sapply(plague_specific, function(x) typeof(x))
plg_cont <- c('disease', 'location', 'year', 'cases', 'duration', 'pop.at.risk', 'hdi', 'cfr', 'physician.density', 'est.attack.rate')
plg_cat <- c('disease', 'location', 'year', 'cases', 'duration', 'pathogen.source', 'climate', 'season', 'precipitation', 'disease.status', 'rural.urban', 'outbreak.curve', 'special.pop.group', 'pop.movement', 'case.def', 'disease.type', 'affected.animal', 'rainy.dry')
plague_cont_vars <- plague_specific[, plg_cont]
plague_cat_vars <- plague_specific[, plg_cat]
plag_cont2 <- as.data.frame(plague_cont_vars[,3:10]) # Used for the apply funciton on continuous variables
plot(plague_outbreaks$cases, plague_outbreaks$hdi)
cor(plague_outbreaks$duration, plague_outbreaks$cases, method = c("pearson"))
cor(plague_outbreaks$duration, plague_outbreaks$cases, method = c("pearson"), use="pairwise.complete.obs")
cor(plague_outbreaks$hdi, plague_outbreaks$duration, method = c("pearson"), use="pairwise.complete.obs")
plague_cat_vars <- plague_specific[, plg_cat]
plague_cat_vars
unique(plague_cat_vars$pathogen.source)
res.aov <- aov(plague_cat_vars$cases ~ plague_cat_vars$pathogen.source, data = plague_cat_vars)
summary(res.aov)
View(plague_outbreaks)
library(readr)
getwd()
setwd(/Users/l245854/Desktop/devmtn/personalProject/pals/data)
setwd('Users/l245854/Desktop/devmtn/personalProject/pals/data')
setwd("/Users/l245854/Desktop/devmtn/personalProject/pals/data")
ls()
getwd()
read_csv("injury_coordinates.csv")
in_ill_coords <- read_csv("injury_coordinates.csv")
unique(in_ill_coords$ta_bldg)
names(in_ill_coords)
ta_bldg <- unique(in_ill_coords$ta_bldg)
factors <- unique(in_ill_coords$FACTORS1)
jobs <- unique(in_ill_coords$`Job Title`)
boby_parts <- unique(in_ill_coords$BODY_PARTS)
write_csv(ta_bldg, 'Unique_locations.csv')
ta_bldg <- unique(in_ill_coords$ta_bldg)
write_csv(ta_bldg, 'Unique_locations.csv')
View(ta_bldg)
write.csv(ta_bldg, file='Unique_locations.csv')
write.csv(ta_bldg, file='Unique_locations.csv', row.names = FALSE)
write.csv(ta_bldg, file='Unique_locations.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
write.table(ta_bldg, file='Unique_locations.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
write.table(body_parts, file='Unique_bodyParts.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
factors <- unique(in_ill_coords$FACTORS1)
jobs <- unique(in_ill_coords$`Job Title`)
boby_parts <- unique(in_ill_coords$BODY_PARTS)
write.table(ta_bldg, file='Unique_locations.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
write.table(factors, file='Unique_factors.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
write.table(jobs, file='Unique_jobs.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
write.table(body_parts, file='Unique_bodyParts.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
boby_parts <- unique(in_ill_coords$BODY_PARTS)
write.table(body_parts, file='Unique_bodyParts.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
body_parts <- unique(in_ill_coords$BODY_PARTS)
write.table(body_parts, file='Unique_bodyParts.csv', row.names = FALSE, col.names = FALSE, sep=",", na="")
non_miss_loc <- in_ill_coord[which(in_ill_coords$latitude != NA & in_ill_coords$longitude !=NA]
non_miss_loc <- in_ill_coord[which(in_ill_coords$latitude != NA & in_ill_coords$longitude !=NA)]
non_miss_loc <- in_ill_coords[which(in_ill_coords$latitude != NA & in_ill_coords$longitude !=NA)]
non_miss_loc <- subset(in_ill_coords, latitude != NA & longitude != NA]
non_miss_loc <- subset(in_ill_coords, latitude != NA & longitude != NA)
View(non_miss_loc)
non_miss_loc <- subset(in_ill_coords, (!is.na(in_ill_coords$latitude) & (!is.na(in_ill_coords$longitude)))
non_miss_loc <- subset(in_ill_coords, (!is.na(in_ill_coords$latitude) & (!is.na(in_ill_coords$longitude)))
)
non_miss_loc <- in_ill_coords %>%
select("Incident Date")
library(dplyr)
install.packages(dplyr)
install.packages('dplyr')
library(dplyr)
non_miss_loc <- in_ill_coords %>%
select("Incident Date")
View(non_miss_loc)
View(non_miss_loc)
names(in_ill_coords)
non_miss_loc <- in_ill_coords %>%
select("Incident Date", ta_bldg, "latitude", "longitude", "FACTORS1", "FACTORS2", "Job Title")
View(non_miss_loc)
non_miss_loc <- in_ill_coords %>%
select("Incident Date", ta_bldg, "latitude",  "longitude", "Job Title", "FACTORS1", "FACTORS2", "BODY_PARTS")
View(non_miss_loc)
non_miss_loc <- in_ill_coords %>%
select("Incident Date", ta_bldg, "latitude",  "longitude", "Job Title", "FACTORS1", "FACTORS2", "BODY_PARTS")%>%
filter(latitude != NA & longitude != NA)
View(non_miss_loc)
non_miss_loc <- in_ill_coords %>%
select("Incident Date", ta_bldg, "latitude",  "longitude", "Job Title", "FACTORS1", "FACTORS2", "BODY_PARTS")%>%
filter(!is.na(latitude) & !is.na(longitude))
View(non_miss_loc)
small_df <- sample_n(df, 200)
small_df <- sample_n(non_miss_loc, 200)
View(small_df)
write_csv(small_df, "in_ill_subset.csv")
write_csv(small_df, "in_ill_subset.csv")
in_ill_coords$`Incident Date` <- as.date(in_ill_coords$`Incident Date`)
in_ill_coords$`Incident Date` <- as.Date(in_ill_coords$`Incident Date`)
non_miss_loc <- in_ill_coords %>%
select("Incident Date", ta_bldg, "latitude",  "longitude", "Job Title", "FACTORS1", "FACTORS2", "BODY_PARTS", )%>%
filter(!is.na(latitude) & !is.na(longitude))
# Small subset
small_df <- sample_n(non_miss_loc, 200)
write_csv(small_df, "in_ill_subset.csv")
typeof(small_df$`Incident Date`)
View(small_df)
